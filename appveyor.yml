provider: Environment
name: production
on:
  APPVEYOR_REPO_TAG: true

# Test against the latest version of this Node.js version
environment:
  nodejs_version: "8"
  local_app_data: '%LOCALAPPDATA%'
  matrix:
    - kraken_platform: win64
      PLATFORM: x64
    - kraken_platform: win32
      PLATFORM: x86

cache:
  - node_modules
  - '%APPDATA%\npm-cache'
  - '%USERPROFILE%\AppData\Local\Yarn\cache'

# Install scripts. (runs after repo cloning)
install:
  - ps: Start-FileDownload https://release.gitkraken.com/$env:kraken_platform/GitKrakenSetup.exe
  - GitKrakenSetup.exe /verysilent /nolaunch
  # Get the latest stable version of Node.js or io.js
  - ps: Install-Product node $env:nodejs_version
  # install modules
  - npm install

build_script:
  - ps: copy $env:local_app_data\gitkraken\app-$(node -pe "require('./package.json').version")\resources\app.asar app.asar.original
  - ps: Copy-Item -Path $env:local_app_data\gitkraken\app-$(node -pe "require('./package.json').version")\resources\app.asar.unpacked\ -Destination app.asar.original.unpacked -Recurse
  - npm run extract
  - npm run localize:win:jp
  - npm run pack
  - ps: .\createPatch.ps1 $(node -pe "require('./package.json').version") $env:kraken_platform

test: off

artifacts:
  - path: 'patches\*.patch'
    name: patch
